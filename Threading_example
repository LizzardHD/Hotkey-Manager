import threading
import keyboard
import time
import tkinter as tk

# Flags to control the threads
outer_running = False
inner_running = False
falling_trigger = False
# Create a hotkey
hotkey = "space"

def inner_thread():
    global inner_running
    while outer_running:
        if inner_running:
            for i in range(3000):
                print(f"Inner thread is running{i}")
                if not inner_running:
                    break
                time.sleep(1)

def on_hotkey_event(e):
    global inner_running, falling_trigger
    if e.event_type == keyboard.KEY_DOWN:
        if not falling_trigger:
            falling_trigger = True
            inner_running = not inner_running
    elif e.event_type == keyboard.KEY_UP:
        falling_trigger = False

def start_outer_thread():
    global outer_running, inner_thread_instance
    outer_running = True
    inner_thread_instance = threading.Thread(target=inner_thread)
    inner_thread_instance.daemon = True  # Set as daemon thread
    inner_thread_instance.start()

def stop_outer_thread():
    global outer_running, inner_running
    outer_running = False
    inner_running = False  # Stop the inner thread gracefully

# Create a tkinter window
root = tk.Tk()
root.title("Thread Control")

# Create buttons to start and stop the outer thread
start_button = tk.Button(root, text="Start Outer Thread", command=start_outer_thread)
stop_button = tk.Button(root, text="Stop Outer Thread", command=stop_outer_thread)

start_button.pack()
stop_button.pack()

# Register the hotkey event
keyboard.on_press_key(hotkey, on_hotkey_event)
keyboard.on_release_key(hotkey, on_hotkey_event)
root.mainloop()
